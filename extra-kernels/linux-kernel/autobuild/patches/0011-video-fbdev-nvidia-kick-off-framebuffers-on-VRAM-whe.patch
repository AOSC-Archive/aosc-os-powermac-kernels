From e18d6b5b4d116d8f554eadd5dece693037c20f38 Mon Sep 17 00:00:00 2001
From: Icenowy Zheng <icenowy@aosc.io>
Date: Tue, 23 Jul 2019 19:29:54 +0800
Subject: [PATCH 1/3] video: fbdev: nvidia: kick off framebuffers on VRAM when
 loading

Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
---
 drivers/video/fbdev/nvidia/nvidia.c | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/drivers/video/fbdev/nvidia/nvidia.c b/drivers/video/fbdev/nvidia/nvidia.c
index ce7dab7299fe..54519377c042 100644
--- a/drivers/video/fbdev/nvidia/nvidia.c
+++ b/drivers/video/fbdev/nvidia/nvidia.c
@@ -1272,7 +1272,7 @@ static int nvidiafb_probe(struct pci_dev *pd, const struct pci_device_id *ent)
 	struct nvidia_par *par;
 	struct fb_info *info;
 	unsigned short cmd;
-
+	struct apertures_struct *aper;
 
 	NVTRACE_ENTER();
 	assert(pd != NULL);
@@ -1289,6 +1289,18 @@ static int nvidiafb_probe(struct pci_dev *pd, const struct pci_device_id *ent)
 	if (info->pixmap.addr == NULL)
 		goto err_out_kfree;
 
+	aper = alloc_apertures(1);
+
+	if (!aper)
+		goto err_out_enable;
+
+	/* BAR 1 is VRAM */
+	aper->ranges[0].base = pci_resource_start(pd, 1);
+	aper->ranges[0].size = pci_resource_len(pd, 1);
+
+	remove_conflicting_framebuffers(aper, "nvidiafb", true);
+	kfree(aper);
+
 	if (pci_enable_device(pd)) {
 		printk(KERN_ERR PFX "cannot enable PCI device\n");
 		goto err_out_enable;
-- 
2.21.0

